--- ./lrslib.c.orig	2012-08-13 14:56:49.620346629 -0600
+++ ./lrslib.c	2012-08-13 14:56:54.420345979 -0600
@@ -1400,7 +1400,8 @@ lrs_getfirstbasis (lrs_dic ** D_p, lrs_d
     }
   if (nredundcol > 0)
     {
-      *Lin = lrs_alloc_mp_matrix (nredundcol, Q->n);
+      const unsigned int Qn = Q->n;
+      *Lin = lrs_alloc_mp_matrix (nredundcol, Qn);
 
       for (i = 0; i < nredundcol; i++)
 	{
@@ -1410,7 +1411,10 @@ lrs_getfirstbasis (lrs_dic ** D_p, lrs_d
 	    }
 
 	  if (!removecobasicindex (D, Q, 0L))
-	    return FALSE;
+	    {
+	      lrs_clear_mp_matrix (*Lin, nredundcol, Qn);
+	      return FALSE;
+	    }
 	}
     }				/* end if nredundcol > 0 */
 
--- ./nash.c.orig	2009-09-10 12:40:50.000000000 -0600
+++ ./nash.c	2012-03-16 10:15:44.760069250 -0600
@@ -497,7 +497,8 @@ lrs_getfirstbasis2 (lrs_dic ** D_p, lrs_
     }
   if (nredundcol > 0)
     {
-      *Lin = lrs_alloc_mp_matrix (nredundcol, Q->n);
+      const unsigned int Qn = Q->n;
+      *Lin = lrs_alloc_mp_matrix (nredundcol, Qn);
 
       for (i = 0; i < nredundcol; i++)
 	{
@@ -507,7 +508,10 @@ lrs_getfirstbasis2 (lrs_dic ** D_p, lrs_
 	    }
 
 	  if (!removecobasicindex (D, Q, 0L))
-	    return FALSE;
+	    {
+	      lrs_clear_mp_matrix (*Lin, nredundcol, Qn);
+	      return FALSE;
+	    }
 	}
     }				/* end if nredundcol > 0 */
 
